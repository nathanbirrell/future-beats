/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/albums": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.albums.id"];
          title?: parameters["rowFilter.albums.title"];
          slug?: parameters["rowFilter.albums.slug"];
          artwork?: parameters["rowFilter.albums.artwork"];
          published_at?: parameters["rowFilter.albums.published_at"];
          artist?: parameters["rowFilter.albums.artist"];
          catalogNumber?: parameters["rowFilter.albums.catalogNumber"];
          links?: parameters["rowFilter.albums.links"];
          content?: parameters["rowFilter.albums.content"];
          tags?: parameters["rowFilter.albums.tags"];
          state?: parameters["rowFilter.albums.state"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["albums"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** albums */
          albums?: definitions["albums"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.albums.id"];
          title?: parameters["rowFilter.albums.title"];
          slug?: parameters["rowFilter.albums.slug"];
          artwork?: parameters["rowFilter.albums.artwork"];
          published_at?: parameters["rowFilter.albums.published_at"];
          artist?: parameters["rowFilter.albums.artist"];
          catalogNumber?: parameters["rowFilter.albums.catalogNumber"];
          links?: parameters["rowFilter.albums.links"];
          content?: parameters["rowFilter.albums.content"];
          tags?: parameters["rowFilter.albums.tags"];
          state?: parameters["rowFilter.albums.state"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.albums.id"];
          title?: parameters["rowFilter.albums.title"];
          slug?: parameters["rowFilter.albums.slug"];
          artwork?: parameters["rowFilter.albums.artwork"];
          published_at?: parameters["rowFilter.albums.published_at"];
          artist?: parameters["rowFilter.albums.artist"];
          catalogNumber?: parameters["rowFilter.albums.catalogNumber"];
          links?: parameters["rowFilter.albums.links"];
          content?: parameters["rowFilter.albums.content"];
          tags?: parameters["rowFilter.albums.tags"];
          state?: parameters["rowFilter.albums.state"];
        };
        body: {
          /** albums */
          albums?: definitions["albums"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/track_links": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.track_links.id"];
          platform?: parameters["rowFilter.track_links.platform"];
          href?: parameters["rowFilter.track_links.href"];
          artwork?: parameters["rowFilter.track_links.artwork"];
          last_checked_at?: parameters["rowFilter.track_links.last_checked_at"];
          track?: parameters["rowFilter.track_links.track"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["track_links"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** track_links */
          track_links?: definitions["track_links"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.track_links.id"];
          platform?: parameters["rowFilter.track_links.platform"];
          href?: parameters["rowFilter.track_links.href"];
          artwork?: parameters["rowFilter.track_links.artwork"];
          last_checked_at?: parameters["rowFilter.track_links.last_checked_at"];
          track?: parameters["rowFilter.track_links.track"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.track_links.id"];
          platform?: parameters["rowFilter.track_links.platform"];
          href?: parameters["rowFilter.track_links.href"];
          artwork?: parameters["rowFilter.track_links.artwork"];
          last_checked_at?: parameters["rowFilter.track_links.last_checked_at"];
          track?: parameters["rowFilter.track_links.track"];
        };
        body: {
          /** track_links */
          track_links?: definitions["track_links"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/events": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.events.id"];
          title?: parameters["rowFilter.events.title"];
          artwork?: parameters["rowFilter.events.artwork"];
          published_at?: parameters["rowFilter.events.published_at"];
          links?: parameters["rowFilter.events.links"];
          event_type?: parameters["rowFilter.events.event_type"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["events"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** events */
          events?: definitions["events"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.events.id"];
          title?: parameters["rowFilter.events.title"];
          artwork?: parameters["rowFilter.events.artwork"];
          published_at?: parameters["rowFilter.events.published_at"];
          links?: parameters["rowFilter.events.links"];
          event_type?: parameters["rowFilter.events.event_type"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.events.id"];
          title?: parameters["rowFilter.events.title"];
          artwork?: parameters["rowFilter.events.artwork"];
          published_at?: parameters["rowFilter.events.published_at"];
          links?: parameters["rowFilter.events.links"];
          event_type?: parameters["rowFilter.events.event_type"];
        };
        body: {
          /** events */
          events?: definitions["events"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/markers": {
    get: {
      parameters: {
        query: {
          timestamp?: parameters["rowFilter.markers.timestamp"];
          /** Artist and Title of track */
          rawTrack?: parameters["rowFilter.markers.rawTrack"];
          position?: parameters["rowFilter.markers.position"];
          track?: parameters["rowFilter.markers.track"];
          id?: parameters["rowFilter.markers.id"];
          chapter?: parameters["rowFilter.markers.chapter"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["markers"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** markers */
          markers?: definitions["markers"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          timestamp?: parameters["rowFilter.markers.timestamp"];
          /** Artist and Title of track */
          rawTrack?: parameters["rowFilter.markers.rawTrack"];
          position?: parameters["rowFilter.markers.position"];
          track?: parameters["rowFilter.markers.track"];
          id?: parameters["rowFilter.markers.id"];
          chapter?: parameters["rowFilter.markers.chapter"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          timestamp?: parameters["rowFilter.markers.timestamp"];
          /** Artist and Title of track */
          rawTrack?: parameters["rowFilter.markers.rawTrack"];
          position?: parameters["rowFilter.markers.position"];
          track?: parameters["rowFilter.markers.track"];
          id?: parameters["rowFilter.markers.id"];
          chapter?: parameters["rowFilter.markers.chapter"];
        };
        body: {
          /** markers */
          markers?: definitions["markers"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/shows_duplicate": {
    get: {
      parameters: {
        query: {
          slug?: parameters["rowFilter.shows_duplicate.slug"];
          title?: parameters["rowFilter.shows_duplicate.title"];
          state?: parameters["rowFilter.shows_duplicate.state"];
          artwork?: parameters["rowFilter.shows_duplicate.artwork"];
          duration?: parameters["rowFilter.shows_duplicate.duration"];
          published_at?: parameters["rowFilter.shows_duplicate.published_at"];
          links?: parameters["rowFilter.shows_duplicate.links"];
          content?: parameters["rowFilter.shows_duplicate.content"];
          tags?: parameters["rowFilter.shows_duplicate.tags"];
          location?: parameters["rowFilter.shows_duplicate.location"];
          id?: parameters["rowFilter.shows_duplicate.id"];
          profile?: parameters["rowFilter.shows_duplicate.profile"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["shows_duplicate"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** shows_duplicate */
          shows_duplicate?: definitions["shows_duplicate"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          slug?: parameters["rowFilter.shows_duplicate.slug"];
          title?: parameters["rowFilter.shows_duplicate.title"];
          state?: parameters["rowFilter.shows_duplicate.state"];
          artwork?: parameters["rowFilter.shows_duplicate.artwork"];
          duration?: parameters["rowFilter.shows_duplicate.duration"];
          published_at?: parameters["rowFilter.shows_duplicate.published_at"];
          links?: parameters["rowFilter.shows_duplicate.links"];
          content?: parameters["rowFilter.shows_duplicate.content"];
          tags?: parameters["rowFilter.shows_duplicate.tags"];
          location?: parameters["rowFilter.shows_duplicate.location"];
          id?: parameters["rowFilter.shows_duplicate.id"];
          profile?: parameters["rowFilter.shows_duplicate.profile"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          slug?: parameters["rowFilter.shows_duplicate.slug"];
          title?: parameters["rowFilter.shows_duplicate.title"];
          state?: parameters["rowFilter.shows_duplicate.state"];
          artwork?: parameters["rowFilter.shows_duplicate.artwork"];
          duration?: parameters["rowFilter.shows_duplicate.duration"];
          published_at?: parameters["rowFilter.shows_duplicate.published_at"];
          links?: parameters["rowFilter.shows_duplicate.links"];
          content?: parameters["rowFilter.shows_duplicate.content"];
          tags?: parameters["rowFilter.shows_duplicate.tags"];
          location?: parameters["rowFilter.shows_duplicate.location"];
          id?: parameters["rowFilter.shows_duplicate.id"];
          profile?: parameters["rowFilter.shows_duplicate.profile"];
        };
        body: {
          /** shows_duplicate */
          shows_duplicate?: definitions["shows_duplicate"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/tracks": {
    get: {
      parameters: {
        query: {
          title?: parameters["rowFilter.tracks.title"];
          slug?: parameters["rowFilter.tracks.slug"];
          path?: parameters["rowFilter.tracks.path"];
          artwork?: parameters["rowFilter.tracks.artwork"];
          artist?: parameters["rowFilter.tracks.artist"];
          id?: parameters["rowFilter.tracks.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["tracks"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** tracks */
          tracks?: definitions["tracks"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          title?: parameters["rowFilter.tracks.title"];
          slug?: parameters["rowFilter.tracks.slug"];
          path?: parameters["rowFilter.tracks.path"];
          artwork?: parameters["rowFilter.tracks.artwork"];
          artist?: parameters["rowFilter.tracks.artist"];
          id?: parameters["rowFilter.tracks.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          title?: parameters["rowFilter.tracks.title"];
          slug?: parameters["rowFilter.tracks.slug"];
          path?: parameters["rowFilter.tracks.path"];
          artwork?: parameters["rowFilter.tracks.artwork"];
          artist?: parameters["rowFilter.tracks.artist"];
          id?: parameters["rowFilter.tracks.id"];
        };
        body: {
          /** tracks */
          tracks?: definitions["tracks"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/links": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.links.id"];
          platform?: parameters["rowFilter.links.platform"];
          href?: parameters["rowFilter.links.href"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["links"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** links */
          links?: definitions["links"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.links.id"];
          platform?: parameters["rowFilter.links.platform"];
          href?: parameters["rowFilter.links.href"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.links.id"];
          platform?: parameters["rowFilter.links.platform"];
          href?: parameters["rowFilter.links.href"];
        };
        body: {
          /** links */
          links?: definitions["links"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/supply": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.supply.id"];
          title?: parameters["rowFilter.supply.title"];
          artwork?: parameters["rowFilter.supply.artwork"];
          published_at?: parameters["rowFilter.supply.published_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["supply"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** supply */
          supply?: definitions["supply"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.supply.id"];
          title?: parameters["rowFilter.supply.title"];
          artwork?: parameters["rowFilter.supply.artwork"];
          published_at?: parameters["rowFilter.supply.published_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.supply.id"];
          title?: parameters["rowFilter.supply.title"];
          artwork?: parameters["rowFilter.supply.artwork"];
          published_at?: parameters["rowFilter.supply.published_at"];
        };
        body: {
          /** supply */
          supply?: definitions["supply"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/album_artists": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.album_artists.id"];
          artist?: parameters["rowFilter.album_artists.artist"];
          album?: parameters["rowFilter.album_artists.album"];
          position?: parameters["rowFilter.album_artists.position"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["album_artists"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** album_artists */
          album_artists?: definitions["album_artists"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.album_artists.id"];
          artist?: parameters["rowFilter.album_artists.artist"];
          album?: parameters["rowFilter.album_artists.album"];
          position?: parameters["rowFilter.album_artists.position"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.album_artists.id"];
          artist?: parameters["rowFilter.album_artists.artist"];
          album?: parameters["rowFilter.album_artists.album"];
          position?: parameters["rowFilter.album_artists.position"];
        };
        body: {
          /** album_artists */
          album_artists?: definitions["album_artists"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/artists": {
    get: {
      parameters: {
        query: {
          title?: parameters["rowFilter.artists.title"];
          slug?: parameters["rowFilter.artists.slug"];
          links?: parameters["rowFilter.artists.links"];
          artwork?: parameters["rowFilter.artists.artwork"];
          id?: parameters["rowFilter.artists.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["artists"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** artists */
          artists?: definitions["artists"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          title?: parameters["rowFilter.artists.title"];
          slug?: parameters["rowFilter.artists.slug"];
          links?: parameters["rowFilter.artists.links"];
          artwork?: parameters["rowFilter.artists.artwork"];
          id?: parameters["rowFilter.artists.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          title?: parameters["rowFilter.artists.title"];
          slug?: parameters["rowFilter.artists.slug"];
          links?: parameters["rowFilter.artists.links"];
          artwork?: parameters["rowFilter.artists.artwork"];
          id?: parameters["rowFilter.artists.id"];
        };
        body: {
          /** artists */
          artists?: definitions["artists"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/shows": {
    get: {
      parameters: {
        query: {
          slug?: parameters["rowFilter.shows.slug"];
          title?: parameters["rowFilter.shows.title"];
          state?: parameters["rowFilter.shows.state"];
          /** path or URL to artwork */
          artwork?: parameters["rowFilter.shows.artwork"];
          duration?: parameters["rowFilter.shows.duration"];
          published_at?: parameters["rowFilter.shows.published_at"];
          links?: parameters["rowFilter.shows.links"];
          content?: parameters["rowFilter.shows.content"];
          tags?: parameters["rowFilter.shows.tags"];
          location?: parameters["rowFilter.shows.location"];
          id?: parameters["rowFilter.shows.id"];
          profile?: parameters["rowFilter.shows.profile"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["shows"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** shows */
          shows?: definitions["shows"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          slug?: parameters["rowFilter.shows.slug"];
          title?: parameters["rowFilter.shows.title"];
          state?: parameters["rowFilter.shows.state"];
          /** path or URL to artwork */
          artwork?: parameters["rowFilter.shows.artwork"];
          duration?: parameters["rowFilter.shows.duration"];
          published_at?: parameters["rowFilter.shows.published_at"];
          links?: parameters["rowFilter.shows.links"];
          content?: parameters["rowFilter.shows.content"];
          tags?: parameters["rowFilter.shows.tags"];
          location?: parameters["rowFilter.shows.location"];
          id?: parameters["rowFilter.shows.id"];
          profile?: parameters["rowFilter.shows.profile"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          slug?: parameters["rowFilter.shows.slug"];
          title?: parameters["rowFilter.shows.title"];
          state?: parameters["rowFilter.shows.state"];
          /** path or URL to artwork */
          artwork?: parameters["rowFilter.shows.artwork"];
          duration?: parameters["rowFilter.shows.duration"];
          published_at?: parameters["rowFilter.shows.published_at"];
          links?: parameters["rowFilter.shows.links"];
          content?: parameters["rowFilter.shows.content"];
          tags?: parameters["rowFilter.shows.tags"];
          location?: parameters["rowFilter.shows.location"];
          id?: parameters["rowFilter.shows.id"];
          profile?: parameters["rowFilter.shows.profile"];
        };
        body: {
          /** shows */
          shows?: definitions["shows"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/profiles": {
    get: {
      parameters: {
        query: {
          slug?: parameters["rowFilter.profiles.slug"];
          title?: parameters["rowFilter.profiles.title"];
          published_at?: parameters["rowFilter.profiles.published_at"];
          created_by?: parameters["rowFilter.profiles.created_by"];
          updated_by?: parameters["rowFilter.profiles.updated_by"];
          created_at?: parameters["rowFilter.profiles.created_at"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          id?: parameters["rowFilter.profiles.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profiles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          slug?: parameters["rowFilter.profiles.slug"];
          title?: parameters["rowFilter.profiles.title"];
          published_at?: parameters["rowFilter.profiles.published_at"];
          created_by?: parameters["rowFilter.profiles.created_by"];
          updated_by?: parameters["rowFilter.profiles.updated_by"];
          created_at?: parameters["rowFilter.profiles.created_at"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          id?: parameters["rowFilter.profiles.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          slug?: parameters["rowFilter.profiles.slug"];
          title?: parameters["rowFilter.profiles.title"];
          published_at?: parameters["rowFilter.profiles.published_at"];
          created_by?: parameters["rowFilter.profiles.created_by"];
          updated_by?: parameters["rowFilter.profiles.updated_by"];
          created_at?: parameters["rowFilter.profiles.created_at"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          id?: parameters["rowFilter.profiles.id"];
        };
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/chapters": {
    get: {
      parameters: {
        query: {
          title?: parameters["rowFilter.chapters.title"];
          slug?: parameters["rowFilter.chapters.slug"];
          position?: parameters["rowFilter.chapters.position"];
          links?: parameters["rowFilter.chapters.links"];
          artwork?: parameters["rowFilter.chapters.artwork"];
          id?: parameters["rowFilter.chapters.id"];
          show?: parameters["rowFilter.chapters.show"];
          /** any social media associated to the DJ / performer */
          socials?: parameters["rowFilter.chapters.socials"];
          state?: parameters["rowFilter.chapters.state"];
          content?: parameters["rowFilter.chapters.content"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["chapters"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** chapters */
          chapters?: definitions["chapters"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          title?: parameters["rowFilter.chapters.title"];
          slug?: parameters["rowFilter.chapters.slug"];
          position?: parameters["rowFilter.chapters.position"];
          links?: parameters["rowFilter.chapters.links"];
          artwork?: parameters["rowFilter.chapters.artwork"];
          id?: parameters["rowFilter.chapters.id"];
          show?: parameters["rowFilter.chapters.show"];
          /** any social media associated to the DJ / performer */
          socials?: parameters["rowFilter.chapters.socials"];
          state?: parameters["rowFilter.chapters.state"];
          content?: parameters["rowFilter.chapters.content"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          title?: parameters["rowFilter.chapters.title"];
          slug?: parameters["rowFilter.chapters.slug"];
          position?: parameters["rowFilter.chapters.position"];
          links?: parameters["rowFilter.chapters.links"];
          artwork?: parameters["rowFilter.chapters.artwork"];
          id?: parameters["rowFilter.chapters.id"];
          show?: parameters["rowFilter.chapters.show"];
          /** any social media associated to the DJ / performer */
          socials?: parameters["rowFilter.chapters.socials"];
          state?: parameters["rowFilter.chapters.state"];
          content?: parameters["rowFilter.chapters.content"];
        };
        body: {
          /** chapters */
          chapters?: definitions["chapters"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/album_links": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.album_links.id"];
          href?: parameters["rowFilter.album_links.href"];
          artwork?: parameters["rowFilter.album_links.artwork"];
          last_checked_at?: parameters["rowFilter.album_links.last_checked_at"];
          album?: parameters["rowFilter.album_links.album"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["album_links"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** album_links */
          album_links?: definitions["album_links"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.album_links.id"];
          href?: parameters["rowFilter.album_links.href"];
          artwork?: parameters["rowFilter.album_links.artwork"];
          last_checked_at?: parameters["rowFilter.album_links.last_checked_at"];
          album?: parameters["rowFilter.album_links.album"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.album_links.id"];
          href?: parameters["rowFilter.album_links.href"];
          artwork?: parameters["rowFilter.album_links.artwork"];
          last_checked_at?: parameters["rowFilter.album_links.last_checked_at"];
          album?: parameters["rowFilter.album_links.album"];
        };
        body: {
          /** album_links */
          album_links?: definitions["album_links"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/tags": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.tags.id"];
          name?: parameters["rowFilter.tags.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["tags"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** tags */
          tags?: definitions["tags"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.tags.id"];
          name?: parameters["rowFilter.tags.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.tags.id"];
          name?: parameters["rowFilter.tags.name"];
        };
        body: {
          /** tags */
          tags?: definitions["tags"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/posts": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.posts.id"];
          title?: parameters["rowFilter.posts.title"];
          published_at?: parameters["rowFilter.posts.published_at"];
          state?: parameters["rowFilter.posts.state"];
          href?: parameters["rowFilter.posts.href"];
          artwork?: parameters["rowFilter.posts.artwork"];
          profile?: parameters["rowFilter.posts.profile"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["posts"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** posts */
          posts?: definitions["posts"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.posts.id"];
          title?: parameters["rowFilter.posts.title"];
          published_at?: parameters["rowFilter.posts.published_at"];
          state?: parameters["rowFilter.posts.state"];
          href?: parameters["rowFilter.posts.href"];
          artwork?: parameters["rowFilter.posts.artwork"];
          profile?: parameters["rowFilter.posts.profile"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.posts.id"];
          title?: parameters["rowFilter.posts.title"];
          published_at?: parameters["rowFilter.posts.published_at"];
          state?: parameters["rowFilter.posts.state"];
          href?: parameters["rowFilter.posts.href"];
          artwork?: parameters["rowFilter.posts.artwork"];
          profile?: parameters["rowFilter.posts.profile"];
        };
        body: {
          /** posts */
          posts?: definitions["posts"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/artist_links": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.artist_links.id"];
          platform?: parameters["rowFilter.artist_links.platform"];
          href?: parameters["rowFilter.artist_links.href"];
          artwork?: parameters["rowFilter.artist_links.artwork"];
          last_checked_at?: parameters["rowFilter.artist_links.last_checked_at"];
          artist?: parameters["rowFilter.artist_links.artist"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["artist_links"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** artist_links */
          artist_links?: definitions["artist_links"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.artist_links.id"];
          platform?: parameters["rowFilter.artist_links.platform"];
          href?: parameters["rowFilter.artist_links.href"];
          artwork?: parameters["rowFilter.artist_links.artwork"];
          last_checked_at?: parameters["rowFilter.artist_links.last_checked_at"];
          artist?: parameters["rowFilter.artist_links.artist"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.artist_links.id"];
          platform?: parameters["rowFilter.artist_links.platform"];
          href?: parameters["rowFilter.artist_links.href"];
          artwork?: parameters["rowFilter.artist_links.artwork"];
          last_checked_at?: parameters["rowFilter.artist_links.last_checked_at"];
          artist?: parameters["rowFilter.artist_links.artist"];
        };
        body: {
          /** artist_links */
          artist_links?: definitions["artist_links"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rpc/site_search": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: text */
            query: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/tags_counts": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/search_artists": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: text */
            query: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/search_tracks": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: text */
            query: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/get_duplicate_artists": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/notify_api_restart": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/slugify": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: text */
            value: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  albums: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: character varying */
    title: string;
    /** Format: character varying */
    slug: string;
    /** Format: character varying */
    artwork?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    published_at: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `artists.id`.<fk table='artists' column='id'/>
     */
    artist?: string;
    /** Format: character varying */
    catalogNumber?: string;
    /** Format: jsonb */
    links?: unknown;
    /** Format: text */
    content?: string;
    /** Format: text[] */
    tags?: string[];
    /**
     * Format: character varying
     * @default draft
     */
    state: string;
  };
  track_links: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: character varying */
    platform: string;
    /** Format: character varying */
    href: string;
    /** Format: character varying */
    artwork?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    last_checked_at: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `tracks.id`.<fk table='tracks' column='id'/>
     */
    track?: string;
  };
  events: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: character varying */
    title?: string;
    /** Format: character varying */
    artwork?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    published_at: string;
    /** Format: jsonb */
    links?: unknown;
    /**
     * Format: character varying
     * @default concert
     */
    event_type?: string;
  };
  markers: {
    /** Format: time without time zone */
    timestamp?: string;
    /**
     * Format: character varying
     * @description Artist and Title of track
     */
    rawTrack?: string;
    /**
     * Format: integer
     * @default 0
     */
    position: number;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `tracks.id`.<fk table='tracks' column='id'/>
     */
    track?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `chapters.id`.<fk table='chapters' column='id'/>
     */
    chapter: string;
  };
  /** @description This is a duplicate copy of shows */
  shows_duplicate: {
    /** Format: character varying */
    slug?: string;
    /** Format: character varying */
    title?: string;
    /** Format: character varying */
    state?: string;
    /** Format: character varying */
    artwork?: string;
    /** Format: integer */
    duration?: number;
    /** Format: timestamp with time zone */
    published_at?: string;
    /** Format: jsonb */
    links?: unknown;
    /** Format: text */
    content?: string;
    /** Format: integer[] */
    tags?: number[];
    /** Format: character varying */
    location?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: character varying */
    profile?: string;
  };
  tracks: {
    /** Format: character varying */
    title: string;
    /** Format: character varying */
    slug: string;
    /** Format: character varying */
    path: string;
    /** Format: character varying */
    artwork?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `artists.id`.<fk table='artists' column='id'/>
     */
    artist: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
  };
  links: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: character varying */
    platform: string;
    /** Format: character varying */
    href: string;
  };
  supply: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    title: string;
    /** Format: text */
    artwork: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    published_at: string;
  };
  album_artists: {
    /** Format: character varying */
    id: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `artists.id`.<fk table='artists' column='id'/>
     */
    artist: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `albums.id`.<fk table='albums' column='id'/>
     */
    album: string;
    /**
     * Format: integer
     * @default 0
     */
    position: number;
  };
  artists: {
    /** Format: character varying */
    title: string;
    /** Format: character varying */
    slug: string;
    /** Format: jsonb */
    links?: unknown;
    /** Format: character varying */
    artwork?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
  };
  shows: {
    /** Format: character varying */
    slug: string;
    /** Format: character varying */
    title: string;
    /**
     * Format: character varying
     * @default draft
     */
    state: string;
    /**
     * Format: character varying
     * @description path or URL to artwork
     */
    artwork?: string;
    /**
     * Format: integer
     * @default 0
     */
    duration: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    published_at?: string;
    /** Format: jsonb */
    links?: unknown;
    /** Format: text */
    content?: string;
    /** Format: integer[] */
    tags?: number[];
    /** Format: character varying */
    location?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    profile: string;
  };
  profiles: {
    /** Format: character varying */
    slug?: string;
    /** Format: character varying */
    title?: string;
    /** Format: timestamp with time zone */
    published_at?: string;
    /** Format: integer */
    created_by?: number;
    /** Format: integer */
    updated_by?: number;
    /** Format: timestamp with time zone */
    created_at?: string;
    /** Format: timestamp with time zone */
    updated_at?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
  };
  chapters: {
    /** Format: character varying */
    title: string;
    /** Format: character varying */
    slug: string;
    /**
     * Format: integer
     * @default 0
     */
    position: number;
    /** Format: jsonb */
    links?: unknown;
    /** Format: character varying */
    artwork?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `shows.id`.<fk table='shows' column='id'/>
     */
    show?: string;
    /**
     * Format: jsonb
     * @description any social media associated to the DJ / performer
     */
    socials?: unknown;
    /**
     * Format: character varying
     * @default draft
     */
    state: string;
    /** Format: text */
    content?: string;
  };
  album_links: {
    /** Format: character varying */
    id: string;
    /** Format: character varying */
    href?: string;
    /** Format: character varying */
    artwork?: string;
    /**
     * Format: timestamp with time zone
     * @default timezone('utc'::text, now())
     */
    last_checked_at: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `albums.id`.<fk table='albums' column='id'/>
     */
    album: string;
  };
  tags: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: character varying */
    name: string;
  };
  posts: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: character varying */
    title: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    published_at: string;
    /**
     * Format: character varying
     * @default draft
     */
    state: string;
    /** Format: character varying */
    href?: string;
    /** Format: character varying */
    artwork?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    profile: string;
  };
  /** @description This is a duplicate copy of track_links */
  artist_links: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: character varying */
    platform?: string;
    /** Format: character varying */
    href?: string;
    /** Format: character varying */
    artwork?: string;
    /** Format: timestamp with time zone */
    last_checked_at?: string;
    /** Format: character varying */
    artist?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferPost:
    | "return=representation"
    | "return=minimal"
    | "return=none"
    | "resolution=ignore-duplicates"
    | "resolution=merge-duplicates";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description albums */
  "body.albums": definitions["albums"];
  /** Format: character varying */
  "rowFilter.albums.id": string;
  /** Format: character varying */
  "rowFilter.albums.title": string;
  /** Format: character varying */
  "rowFilter.albums.slug": string;
  /** Format: character varying */
  "rowFilter.albums.artwork": string;
  /** Format: timestamp with time zone */
  "rowFilter.albums.published_at": string;
  /** Format: character varying */
  "rowFilter.albums.artist": string;
  /** Format: character varying */
  "rowFilter.albums.catalogNumber": string;
  /** Format: jsonb */
  "rowFilter.albums.links": string;
  /** Format: text */
  "rowFilter.albums.content": string;
  /** Format: text[] */
  "rowFilter.albums.tags": string;
  /** Format: character varying */
  "rowFilter.albums.state": string;
  /** @description track_links */
  "body.track_links": definitions["track_links"];
  /** Format: integer */
  "rowFilter.track_links.id": string;
  /** Format: character varying */
  "rowFilter.track_links.platform": string;
  /** Format: character varying */
  "rowFilter.track_links.href": string;
  /** Format: character varying */
  "rowFilter.track_links.artwork": string;
  /** Format: timestamp with time zone */
  "rowFilter.track_links.last_checked_at": string;
  /** Format: character varying */
  "rowFilter.track_links.track": string;
  /** @description events */
  "body.events": definitions["events"];
  /** Format: character varying */
  "rowFilter.events.id": string;
  /** Format: character varying */
  "rowFilter.events.title": string;
  /** Format: character varying */
  "rowFilter.events.artwork": string;
  /** Format: timestamp with time zone */
  "rowFilter.events.published_at": string;
  /** Format: jsonb */
  "rowFilter.events.links": string;
  /** Format: character varying */
  "rowFilter.events.event_type": string;
  /** @description markers */
  "body.markers": definitions["markers"];
  /** Format: time without time zone */
  "rowFilter.markers.timestamp": string;
  /**
   * Format: character varying
   * @description Artist and Title of track
   */
  "rowFilter.markers.rawTrack": string;
  /** Format: integer */
  "rowFilter.markers.position": string;
  /** Format: character varying */
  "rowFilter.markers.track": string;
  /** Format: character varying */
  "rowFilter.markers.id": string;
  /** Format: character varying */
  "rowFilter.markers.chapter": string;
  /** @description shows_duplicate */
  "body.shows_duplicate": definitions["shows_duplicate"];
  /** Format: character varying */
  "rowFilter.shows_duplicate.slug": string;
  /** Format: character varying */
  "rowFilter.shows_duplicate.title": string;
  /** Format: character varying */
  "rowFilter.shows_duplicate.state": string;
  /** Format: character varying */
  "rowFilter.shows_duplicate.artwork": string;
  /** Format: integer */
  "rowFilter.shows_duplicate.duration": string;
  /** Format: timestamp with time zone */
  "rowFilter.shows_duplicate.published_at": string;
  /** Format: jsonb */
  "rowFilter.shows_duplicate.links": string;
  /** Format: text */
  "rowFilter.shows_duplicate.content": string;
  /** Format: integer[] */
  "rowFilter.shows_duplicate.tags": string;
  /** Format: character varying */
  "rowFilter.shows_duplicate.location": string;
  /** Format: character varying */
  "rowFilter.shows_duplicate.id": string;
  /** Format: character varying */
  "rowFilter.shows_duplicate.profile": string;
  /** @description tracks */
  "body.tracks": definitions["tracks"];
  /** Format: character varying */
  "rowFilter.tracks.title": string;
  /** Format: character varying */
  "rowFilter.tracks.slug": string;
  /** Format: character varying */
  "rowFilter.tracks.path": string;
  /** Format: character varying */
  "rowFilter.tracks.artwork": string;
  /** Format: character varying */
  "rowFilter.tracks.artist": string;
  /** Format: character varying */
  "rowFilter.tracks.id": string;
  /** @description links */
  "body.links": definitions["links"];
  /** Format: integer */
  "rowFilter.links.id": string;
  /** Format: character varying */
  "rowFilter.links.platform": string;
  /** Format: character varying */
  "rowFilter.links.href": string;
  /** @description supply */
  "body.supply": definitions["supply"];
  /** Format: integer */
  "rowFilter.supply.id": string;
  /** Format: text */
  "rowFilter.supply.title": string;
  /** Format: text */
  "rowFilter.supply.artwork": string;
  /** Format: timestamp with time zone */
  "rowFilter.supply.published_at": string;
  /** @description album_artists */
  "body.album_artists": definitions["album_artists"];
  /** Format: character varying */
  "rowFilter.album_artists.id": string;
  /** Format: character varying */
  "rowFilter.album_artists.artist": string;
  /** Format: character varying */
  "rowFilter.album_artists.album": string;
  /** Format: integer */
  "rowFilter.album_artists.position": string;
  /** @description artists */
  "body.artists": definitions["artists"];
  /** Format: character varying */
  "rowFilter.artists.title": string;
  /** Format: character varying */
  "rowFilter.artists.slug": string;
  /** Format: jsonb */
  "rowFilter.artists.links": string;
  /** Format: character varying */
  "rowFilter.artists.artwork": string;
  /** Format: character varying */
  "rowFilter.artists.id": string;
  /** @description shows */
  "body.shows": definitions["shows"];
  /** Format: character varying */
  "rowFilter.shows.slug": string;
  /** Format: character varying */
  "rowFilter.shows.title": string;
  /** Format: character varying */
  "rowFilter.shows.state": string;
  /**
   * Format: character varying
   * @description path or URL to artwork
   */
  "rowFilter.shows.artwork": string;
  /** Format: integer */
  "rowFilter.shows.duration": string;
  /** Format: timestamp with time zone */
  "rowFilter.shows.published_at": string;
  /** Format: jsonb */
  "rowFilter.shows.links": string;
  /** Format: text */
  "rowFilter.shows.content": string;
  /** Format: integer[] */
  "rowFilter.shows.tags": string;
  /** Format: character varying */
  "rowFilter.shows.location": string;
  /** Format: character varying */
  "rowFilter.shows.id": string;
  /** Format: character varying */
  "rowFilter.shows.profile": string;
  /** @description profiles */
  "body.profiles": definitions["profiles"];
  /** Format: character varying */
  "rowFilter.profiles.slug": string;
  /** Format: character varying */
  "rowFilter.profiles.title": string;
  /** Format: timestamp with time zone */
  "rowFilter.profiles.published_at": string;
  /** Format: integer */
  "rowFilter.profiles.created_by": string;
  /** Format: integer */
  "rowFilter.profiles.updated_by": string;
  /** Format: timestamp with time zone */
  "rowFilter.profiles.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.profiles.updated_at": string;
  /** Format: character varying */
  "rowFilter.profiles.id": string;
  /** @description chapters */
  "body.chapters": definitions["chapters"];
  /** Format: character varying */
  "rowFilter.chapters.title": string;
  /** Format: character varying */
  "rowFilter.chapters.slug": string;
  /** Format: integer */
  "rowFilter.chapters.position": string;
  /** Format: jsonb */
  "rowFilter.chapters.links": string;
  /** Format: character varying */
  "rowFilter.chapters.artwork": string;
  /** Format: character varying */
  "rowFilter.chapters.id": string;
  /** Format: character varying */
  "rowFilter.chapters.show": string;
  /**
   * Format: jsonb
   * @description any social media associated to the DJ / performer
   */
  "rowFilter.chapters.socials": string;
  /** Format: character varying */
  "rowFilter.chapters.state": string;
  /** Format: text */
  "rowFilter.chapters.content": string;
  /** @description album_links */
  "body.album_links": definitions["album_links"];
  /** Format: character varying */
  "rowFilter.album_links.id": string;
  /** Format: character varying */
  "rowFilter.album_links.href": string;
  /** Format: character varying */
  "rowFilter.album_links.artwork": string;
  /** Format: timestamp with time zone */
  "rowFilter.album_links.last_checked_at": string;
  /** Format: character varying */
  "rowFilter.album_links.album": string;
  /** @description tags */
  "body.tags": definitions["tags"];
  /** Format: integer */
  "rowFilter.tags.id": string;
  /** Format: character varying */
  "rowFilter.tags.name": string;
  /** @description posts */
  "body.posts": definitions["posts"];
  /** Format: integer */
  "rowFilter.posts.id": string;
  /** Format: character varying */
  "rowFilter.posts.title": string;
  /** Format: timestamp with time zone */
  "rowFilter.posts.published_at": string;
  /** Format: character varying */
  "rowFilter.posts.state": string;
  /** Format: character varying */
  "rowFilter.posts.href": string;
  /** Format: character varying */
  "rowFilter.posts.artwork": string;
  /** Format: character varying */
  "rowFilter.posts.profile": string;
  /** @description artist_links */
  "body.artist_links": definitions["artist_links"];
  /** Format: integer */
  "rowFilter.artist_links.id": string;
  /** Format: character varying */
  "rowFilter.artist_links.platform": string;
  /** Format: character varying */
  "rowFilter.artist_links.href": string;
  /** Format: character varying */
  "rowFilter.artist_links.artwork": string;
  /** Format: timestamp with time zone */
  "rowFilter.artist_links.last_checked_at": string;
  /** Format: character varying */
  "rowFilter.artist_links.artist": string;
}

export interface operations {}

export interface external {}
